scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
ggplot(df["Albumin"], aes(x = Albumin)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1)
ggplot(aes(x=Albumin)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8)
ggplot(aes(x=df["Albumin"])) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8)
df["Albumin"]
density(df["Albumin"])
density(df["Albumin"])
density(df[,"Albumin"])
density(na_omit(df[,"Albumin"]))
density(na.omit(df[,"Albumin"]))
d <- density(na.omit(df[,"Albumin"]))
plot(d)
d <- density(na.omit(df["Albumin"]))
d <- density(na.omit(df[,"Albumin"]))
plot(d)
ggplot(df[, numeric_cols], aes(x = Albumin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggplot(df[, numeric_cols], aes(x = Albumin, fill = "Class"))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggplot(df[, numeric_cols], aes(x = "Albumin", fill = "Class"))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggplot(df[, numeric_cols], aes(x = Albumin, fill = "Class"))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggplot(df, aes(x = Albumin, fill = "Class"))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggplot(df_all, aes(x = Albumin, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
ggplot(df_all, aes(x = Albumin, color = Class)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
ggplot(df, aes(x = Albumin, fill = "Class"))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggplot(df, aes(x = Albumin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggplot(df, aes(x = Albumin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggplot(df, aes(x = Albumin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggplot(df, aes(x = Bilirubin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggplot(df, aes(x = Albumin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggplot(df, aes(x = Bilirubin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
library(dplyr)
library(visdat)
library(caret)
library(RANN)
library(corrplot)
library(plotly)
library(ggplot2)
library(resample)
library(DataExplorer)
library(imputeMulti)
library(mice)
library(rmarkdown)
library(repr)
library(tidyverse)
library(flextable)
library(imbalance)
library(cowplot)
library(dplyr)
library(visdat)
library(caret)
library(RANN)
library(corrplot)
library(plotly)
library(ggplot2)
library(resample)
library(DataExplorer)
library(imputeMulti)
library(mice)
library(rmarkdown)
library(repr)
library(tidyverse)
library(flextable)
library(imbalance)
library(cowplot)
df <- read.table("hepatitis.data", sep = ",")
colnames(df) <- c("Class","Age","Sex","Steroid","Antivirals","Fatigue","Malaise","Anorexia","LiverBig","LiverFirm","SpleenPalpable","Spiders","Ascites","Varices","Bilirubin","AlkPhosphate","Sgot","Albumin","Protime","Histology") # nolint
head(df)
df[df == "?"] <- NA
df <- mutate_all(df, function(x) as.numeric(as.character(x)))
categorical <- c(1, 3:14, 20)
df[, categorical] <- replace(df[, categorical], df[, categorical] == 2, 0)
df[, categorical] <-  lapply(df[, categorical], as.factor)
plot_missing(df)
sum(rowSums(is.na(df)) != 0)
sum(is.na(df))
vis_dat(df)
df.new <- mutate_all(df, function(x) as.numeric(as.character(x)))
data_transform <- preProcess(df.new, method = "knnImpute")
data_transform2 <- preProcess(df.new, method = "bagImpute")
data_transform3 <- preProcess(df.new, method = "medianImpute")
df1 <- predict(data_transform, df.new)
df2 <- predict(data_transform2, df.new)
df3 <- predict(data_transform3, df.new)
unstandarize <- function(data){
for (i in 1:20) {
column <- df.new[, i]
if (i %in% c(15, 18)) {
data[, i] <- data[, i] * sd(na.omit(column)) + mean(na.omit(column))
} else {
data[, i] <- round(data[, i] * sd(na.omit(column)) + mean(na.omit(column)))
}
}
return(data)
}
df1.standarized <- df1
df2[c(4:14, 16:17, 19)] <- round(df2[c(4:14, 16:17, 19)])
df3[c(4:14, 16:17, 19)] <- round(df3[c(4:14, 16:17, 19)])
df1 <- unstandarize(df1)
methods = c(" ", " ", " ", "logreg", " ", "logreg", "logreg", "logreg", "logreg", "logreg", "logreg", "logreg", "logreg", "logreg", "pmm", "pmm", "pmm", "pmm", "pmm", " ")
imp_single <- mice(df, m = 1, method = methods) # Impute missing values
df4 <- complete(imp_single)         # Store imputed data
imp_multi <- mice(df, method = methods)  # Impute missing values multiple times
df5 <- complete(imp_multi, 1)
df$method <-  c(rep("omit", nrow(df)))
df1$method <- c(rep("knn", nrow(df1)))
df2$method <- c(rep("bag tree", nrow(df2)))
df3$method <- c(rep("median", nrow(df3)))
df4$method <- c(rep("mice single", nrow(df4)))
df5$method <- c(rep("mice", nrow(df5)))
df_all <- rbind(df, df1, df2, df3, df4, df5)
df_all$method <- as.factor(df_all$method)
ggplot(df_all, aes(x = Ascites, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
ggplot(df_all, aes(x = LiverFirm, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
ggplot(df_all, aes(x = Protime, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
df_all <- rbind(df, df1, df2, df5)
df_all$method <- as.factor(df_all$method)
plot_bar(df_all, by = "method", by_position = "dodge")
plot_bar(df1[-21], by = "Class", by_position = "dodge")
df1[, categorical] <-  lapply(df1[, categorical], as.factor)
plot_bar(df1[-21], by = "Class", by_position = "dodge")
plot_bar(df[-21], by = "Class", by_position = "dodge")
numeric_cols <- c("Bilirubin", "Albumin")
plot_histogram(df[, numeric_cols], geom_histogram_args = list("fill" = "#f8766d"))
ggplot(df, aes(x = Albumin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggplot(df, aes(x = Bilirubin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
par(mfrow = c(1, 2))
ggplot(df, aes(x = Albumin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggplot(df, aes(x = Bilirubin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
par(mfrow = c(1, 2))
ggplot(df, aes(x = Albumin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggplot(df, aes(x = Bilirubin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
p1 <- ggplot(df, aes(x = Albumin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
p2 <- ggplot(df, aes(x = Bilirubin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggarrange(p1, p2, ncol = 2, nrow = 1)
?ggarrange
install.packages("ggpubr")
library(ggpubr)
p1 <- ggplot(df, aes(x = Albumin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
p2 <- ggplot(df, aes(x = Bilirubin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggarrange(p1, p2, ncol = 2, nrow = 1)
p1 <- ggplot(df, aes(x = Albumin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
p2 <- ggplot(df, aes(x = Bilirubin, fill = Class))+
geom_histogram( color='#f8766d', alpha=0.6, position='identity')
ggarrange(p1, p2, ncol = 2, nrow = 1)
ggplot(df, aes(x = Age, fill = method)) + scale_fill_brewer(palette = "Set2") + geom_bar(position = "dodge")
ggplot(df_all, aes(x = Protime, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
plot_histogram(df[, numeric_cols], by = "method", by_position = "dodge")
plot_histogram(df[, numeric_cols], by = "method")
plot_histogram(df_all[, numeric_cols], geom_histogram_args = list("fill" = "#f8766d"), by = "method", by_position = "dodge")
plot_histogram(df_all[, numeric_cols], geom_histogram_args = list("fill" = "#f8766d"), by = "method")
plot_histogram(df_all[, numeric_cols], geom_histogram_args = list("fill" = "#f8766d"))
?plot_histogram
ggplot(df_all, aes(x = Protime, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
ggplot(df_all, aes(x = Protime)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
ggplot(df_all, aes(x = Protime, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
ggplot(df_all, aes(x = Protime, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1)
p3 <- ggplot(df_all, aes(x = Albumin, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1)
p4 <- ggplot(df_all, aes(x = Bilirubin, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1)
ggarrange(p3, p4, ncol = 2, nrow = 1)
p5 <- ggplot(df_all, aes(x = Albumin, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
p6 <- ggplot(df_all, aes(x = Bilirubin, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
ggarrange(p5, p6, ncol = 2, nrow = 1)
ggplot(df, aes(x = Age, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
p7 <- ggplot(df, aes(x = Age, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
ggplot(df, aes(x = Age, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
ggplot(df, aes(x = Age, fill = method)) +
scale_fill_brewer(palette = "Set2")
ggplot(df, aes(x = Age)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
ggplot(df, aes(x = Age, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
summary(df)
p7 <- ggplot(df, aes(x = Age, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
p8 <- ggplot(df, aes(x = AlkPhosphate, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
p9 <- ggplot(df, aes(x = Sgot, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
p10 <- ggplot(df, aes(x = Protime, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
ggarrange(p7, p8, p9, p10, ncol = 2, nrow = 2)
summary(df)
summary(df["Sgot"])
p7 <- ggplot(df, aes(x = Age, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
p8 <- ggplot(df, aes(x = AlkPhosphate, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
p9 <- ggplot(df, aes(x = Sgot, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
p10 <- ggplot(df, aes(x = Protime, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
ggarrange(p7, p8, p9, p10, ncol = 2, nrow = 2)
p7 <- ggplot(df, aes(x = Age, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
p8 <- ggplot(df, aes(x = AlkPhosphate, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
p9 <- ggplot(df, aes(x = Sgot, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
p10 <- ggplot(df, aes(x = Protime, fill = method)) +
scale_fill_brewer(palette = "Set2") +
geom_bar(position = "dodge")
ggarrange(p7, p8, p9, p10, ncol = 2, nrow = 2)
summary(df)
ggplot(df_all, aes(x = Protime, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1)
ggplot(df_all, aes(x = AlkPhosphate, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1)
numeric_cols <- c("Bilirubin", "Albumin")
plot_histogram(df, geom_histogram_args = list("fill" = "#f8766d"))
```{r fig5, fig.height = 6, fig.width = 10, fig.align = 'center', warning=FALSE, message=FALSE}
plot_histogram(df, geom_histogram_args = list("fill" = "#f8766d"))
p1 <- ggplot(df, aes(x = Age, fill = Class))+
geom_histogram(color='#f8766d', alpha=0.6, position='identity')
p2 <- ggplot(df, aes(x = Albumin, fill = Class))+
geom_histogram(color='#f8766d', alpha=0.6, position='identity')
p3 <- ggplot(df, aes(x = AlkPhosphate, fill = Class))+
geom_histogram(color='#f8766d', alpha=0.6, position='identity')
p4 <- ggplot(df, aes(x = Bilirubin, fill = Class))+
geom_histogram(color='#f8766d', alpha=0.6, position='identity')
p5 <- ggplot(df, aes(x = Protime, fill = Class))+
geom_histogram(color='#f8766d', alpha=0.6, position='identity')
p6 <- ggplot(df, aes(x = Sgot, fill = Class))+
geom_histogram(color='#f8766d', alpha=0.6, position='identity')
ggarrange(p1, p2, p3, p4, p5, p6, ncol = 2, nrow = 3)
p7 <- ggplot(df_all, aes(x = Age, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1)
p8 <- ggplot(df_all, aes(x = Albumin, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1)
p9 <- ggplot(df_all, aes(x = AlkPhosphate, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1)
p10 <- ggplot(df_all, aes(x = Bilirubin, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1)
p11 <- ggplot(df_all, aes(x = Protime, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1)
p12 <- ggplot(df_all, aes(x = Sgot, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1)
ggarrange(p7, p8, p9, p10, p11, p12, ncol = 2, nrow = 3)
p13 <- ggplot(df_all, aes(x = Age, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
p14 <- ggplot(df_all, aes(x = Albumin, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
p15 <- ggplot(df_all, aes(x = AlkPhosphate, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
p16 <- ggplot(df_all, aes(x = Bilirubin, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
p17 <- ggplot(df_all, aes(x = Protime, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
p18 <- ggplot(df_all, aes(x = Sgot, color = method)) +
scale_fill_brewer(palette = "Set2") +
geom_density(size = 1.1) +
facet_grid(Class ~ .)
ggarrange(p13, p14, p15, p16, p17, p18, ncol = 2, nrow = 3)
plot_qq(df)
plot_qq(df1)
?plot_qq
plot_qq(df_all, by = method)
plot_qq(df_all, by = method)
df_all
plot_qq(df_all, by = "method")
plot_boxplot(df1, by = "Class")
plot_boxplot(df1)
plot_boxplot(df, by = "Class")
plot_boxplot(df1, by = "Class")
plot_boxplot(df)
# numeric_cols <- c("Age", "Bilirubin", "AlkPhosphate", "Sgot", "Albumin", "Protime")
p1 <- ggplot(df1, aes(x=Albumin, y=Bilirubin,color=Class)) + geom_point(size=3)
p2 <- ggplot(df1, aes(x=Albumin, y=AlkPhosphate,color=Class)) + geom_point(size=3)
p3 <- ggplot(df1, aes(x=Albumin, y=Protime,color=Class)) + geom_point(size=3)
p4 <- ggplot(df1, aes(x=Bilirubin, y=Protime,color=Class)) + geom_point(size=3)
plot_grid(p1, p2, p3, p4, labels = "AUTO")
plot_boxplot(df, by = "Class")
plot_boxplot(df_all, by = "Class")
plot_boxplot(df_all, by = "method")
?plot_boxplot
plot_boxplot(df_all, by = "Class")
plot_boxplot(df, by = "Class")
plot_boxplot(df1, by = "Class")
plot_boxplot(df2, by = "Class")
plot_boxplot(df5, by = "Class")
df_all <- rbind(df, df1, df2, df5)
df_all$method <- as.factor(df_all$method)
cor_matrix <- cor(df2[, sapply(df2, is.numeric)], method = "pearson")
corrplot(cor_matrix, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
cor_matrix <- cor(df2[, sapply(df2, is.numeric)], method = "pearson")
corrplot(cor_matrix, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
cor_matrix <- cor(df1[, sapply(df1, is.numeric)], method = "pearson")
corrplot(cor_matrix, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
cor_matrix <- cor(df1[, sapply(df1, is.numeric)], method = "pearson")
corrplot(cor_matrix, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
cor_matrix <- cor(df2[, sapply(df2, is.numeric)], method = "pearson")
corrplot(cor_matrix, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
str(df1)
str(df2)
df2[, categorical] <-  lapply(df2[, categorical], as.factor)
str(df2)
cor_matrix <- cor(df2[, sapply(df2, is.numeric)], method = "pearson")
corrplot(cor_matrix, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
df5[, categorical] <-  lapply(df5[, categorical], as.factor)
cor_matrix <- cor(df5[, sapply(df5, is.numeric)], method = "pearson")
corrplot(cor_matrix, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
df_omit <- na.omit(df)
str(df_omit)
cor_matrix1 <- cor(df_omit[, sapply(df_omit, is.numeric)], method = "pearson")
corrplot(cor_matrix1, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
df_omit <- na.omit(df)
cor_matrix1 <- cor(df_omit[, sapply(df_omit, is.numeric)], method = "pearson")
cor_matrix2 <- cor(df1[, sapply(df1, is.numeric)], method = "pearson")
cor_matrix3 <- cor(df2[, sapply(df2, is.numeric)], method = "pearson")
cor_matrix4 <- cor(df5[, sapply(df5, is.numeric)], method = "pearson")
p1 <- corrplot(cor_matrix1, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
p2 <- corrplot(cor_matrix2, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
p3 <- corrplot(cor_matrix3, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
p4 <- corrplot(cor_matrix4, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
ggarrange(p1, p2, p3, p4, ncol = 2, nrow = 2)
df_omit <- na.omit(df)
cor_matrix1 <- cor(df_omit[, sapply(df_omit, is.numeric)], method = "pearson")
cor_matrix2 <- cor(df1[, sapply(df1, is.numeric)], method = "pearson")
cor_matrix3 <- cor(df2[, sapply(df2, is.numeric)], method = "pearson")
cor_matrix4 <- cor(df5[, sapply(df5, is.numeric)], method = "pearson")
p1 <- corrplot(cor_matrix1, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
p2 <- corrplot(cor_matrix2, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
p3 <- corrplot(cor_matrix3, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
p4 <- corrplot(cor_matrix4, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
plot_grid(p1, p2, p3, p4, labels = "AUTO")
p1 <- {corrplot(cor_matrix1, tl.col = "black", addCoef.col = 1, number.cex = 0.9)}
p2 <- {corrplot(cor_matrix2, tl.col = "black", addCoef.col = 1, number.cex = 0.9)}
p3 <- {corrplot(cor_matrix3, tl.col = "black", addCoef.col = 1, number.cex = 0.9)}
p4 <- {corrplot(cor_matrix4, tl.col = "black", addCoef.col = 1, number.cex = 0.9)}
plot_grid(p1, p2, p3, p4, labels = "AUTO")
p1 <- {corrplot(cor_matrix1, tl.col = "black", addCoef.col = 1, number.cex = 0.9); recordPlot()}
p2 <- {corrplot(cor_matrix2, tl.col = "black", addCoef.col = 1, number.cex = 0.9); recordPlot()}
p3 <- {corrplot(cor_matrix3, tl.col = "black", addCoef.col = 1, number.cex = 0.9); recordPlot()}
p4 <- {corrplot(cor_matrix4, tl.col = "black", addCoef.col = 1, number.cex = 0.9); recordPlot()}
plot_grid(p1, p2, p3, p4, labels = "AUTO")
?corrplot
cor_matrix1 <- cor(df_omit[, sapply(df_omit, is.numeric)], method = "pearson")
cor_matrix2 <- cor(df2[, sapply(df2, is.numeric)], method = "pearson")
cor_matrix3 <- cor(df5[, sapply(df5, is.numeric)], method = "pearson")
corrplot(cor_matrix1, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
corrplot(cor_matrix2, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
corrplot(cor_matrix3, tl.col = "black", addCoef.col = 1, number.cex = 0.9)
model.tr.0 <- lm(Class~., data=train.num[-21])
to_numeric <- function(data) {
data[,categorical] <- lapply(data[, categorical], as.numeric)
data[,categorical] <- data[,categorical] - 1
return(data)
}
```
to_numeric <- function(data) {
data[,categorical] <- lapply(data[, categorical], as.numeric)
data[,categorical] <- data[,categorical] - 1
return(data)
}
train.balanced.num <- to_numeric(train.balanced)
train.balanced.num <- to_numeric(train.balanced)
n_new <- sum(train$Class == 0) - sum(train$Class == 1)
inTrain <- createDataPartition(y=df1$Class, times=1, p=0.75, list=FALSE)
train <- df1[inTrain,]
train.standarized <- df1.standarized[inTrain,]
test <- df1[-inTrain,]
n_new <- sum(train$Class == 0) - sum(train$Class == 1)
newMWMOTE <- mwmote(train.standarized, numInstances = n_new)
newMWMOTE <- unstandarize(newMWMOTE)
train.balanced <- rbind(train[-21], newMWMOTE)
plotComparison(train[-21], train.balanced, attrs = c("Bilirubin","Albumin", "Protime"))
to_numeric <- function(data) {
data[,categorical] <- lapply(data[, categorical], as.numeric)
data[,categorical] <- data[,categorical] - 1
return(data)
}
train.balanced.num <- to_numeric(train.balanced)
train.num <- to_numeric(train)
test.num <- to_numeric(test)
model.0 <- lm(Class~., data=train.balanced.num)
summary(model.0)
# two variables
model.1 <- lm(Class~Albumin+Bilirubin, data=train.balanced.num)
model.2 <- lm(Class~Albumin+AlkPhosphate, data=train.balanced.num)
model.3 <- lm(Class~Albumin+Protime, data=train.balanced.num)
model.4 <- lm(Class~Bilirubin+Protime, data=train.balanced.num)
a1 <- -model.1$coefficients['Albumin']/model.1$coefficients['Bilirubin']
b1 <- -(model.1$coefficients['(Intercept)']-0.5)/model.1$coefficients['Bilirubin']
a2 <- -model.2$coefficients['Albumin']/model.2$coefficients['AlkPhosphate']
b2 <- -(model.2$coefficients['(Intercept)']-0.5)/model.2$coefficients['AlkPhosphate']
a3 <- -model.3$coefficients['Albumin']/model.3$coefficients['Protime']
b3 <- -(model.3$coefficients['(Intercept)']-0.5)/model.3$coefficients['Protime']
a4 <- -model.4$coefficients['Bilirubin']/model.4$coefficients['Protime']
b4 <- -(model.4$coefficients['(Intercept)']-0.5)/model.4$coefficients['Protime']
# confusion.matrix1 <- table(round(pred1), test$Class)
# confusionMatrix(confusion.matrix1, positive = "1")
# two variables
p1 <- ggplot(test, aes(x=Albumin, y=Bilirubin,color=Class)) + geom_point(size=3) + geom_abline(slope=a1,intercept=b1)
p2 <- ggplot(test, aes(x=Albumin, y=AlkPhosphate,color=Class)) + geom_point(size=3) + geom_abline(slope=a2,intercept=b2)
p3 <- ggplot(test, aes(x=Albumin, y=Protime,color=Class)) + geom_point(size=3) + geom_abline(slope=a3,intercept=b3)
p4 <- ggplot(test, aes(x=Bilirubin, y=Protime,color=Class)) + geom_point(size=3) + geom_abline(slope=a4,intercept=b4)
# title <- ggdraw() + draw_label("Comparison of linear regression classifiers", fontface='bold')
plot_grid(p1, p2, p3, p4, ncol=2,labels = "AUTO")
```
# two variables
p1 <- ggplot(test, aes(x=Albumin, y=Bilirubin,color=Class)) + geom_point(size=3) + geom_abline(slope=a1,intercept=b1)
p2 <- ggplot(test, aes(x=Albumin, y=AlkPhosphate,color=Class)) + geom_point(size=3) + geom_abline(slope=a2,intercept=b2)
p3 <- ggplot(test, aes(x=Albumin, y=Protime,color=Class)) + geom_point(size=3) + geom_abline(slope=a3,intercept=b3)
p4 <- ggplot(test, aes(x=Bilirubin, y=Protime,color=Class)) + geom_point(size=3) + geom_abline(slope=a4,intercept=b4)
# title <- ggdraw() + draw_label("Comparison of linear regression classifiers", fontface='bold')
plot_grid(p1, p2, p3, p4, ncol=2,labels = "AUTO")
model.tr.0 <- lm(Class~., data=train.num[-21])
pred.tr.0 <- predict(model.tr.0, test.num[-21])
confusionMatrix(table(round(pred.tr.0), test.num$Class), positive = "1")
train1
train1
